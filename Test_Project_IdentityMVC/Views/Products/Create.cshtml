@model Test_Project_IdentityMVC.Models.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Admin/Layout/_Layout.cshtml";
}


<div id="main-content">
    <div class="container-fluid">
        <div class="block-header">
            <div class="row">
                <div class="col-lg-6 col-md-8 col-sm-12">
                    <h2><a href="javascript:void(0);" class="btn btn-xs btn-link btn-toggle-fullwidth"><i class="fa fa-arrow-left"></i></a> Create New Product</h2>
                    <ul class="breadcrumb">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index","Admin")"><i class="icon-home"></i></a></li>
                        <li class="breadcrumb-item">Product</li>
                        <li class="breadcrumb-item active">Create Product</li>
                    </ul>
                </div>
            </div>
        </div>

        <div class="row clearfix">
            <div class="col-lg-12 col-md-12 col-sm-12">
                <div class="card">
                    <div class="body">
                        @using (Html.BeginForm("Create","Products",FormMethod.Post,new{@class = "product-form"}))
                        {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <h4>Product</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Thumbnails, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10 uploaded">
                                    <button type="button" id="upload_widget" class="btn bg-primary">Upload files</button>

                                    @Html.ValidationMessageFor(model => model.Thumbnails, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <script src="https://widget.cloudinary.com/v2.0/global/all.js" type="text/javascript"></script>
                            <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>

                            <script type="text/javascript">
                                function showUploadWidget() {
                                    cloudinary.openUploadWidget({
                                            cloudName: "namnguyen159198",
                                            uploadPreset: "ml_default",
                                            sources: [
                                                "local",
                                                "url",
                                                "camera",
                                                "image_search",
                                                "facebook",
                                                "dropbox",
                                                "instagram",
                                                "shutterstock"
                                            ],
                                            form: ".product-form",
                                            fieldName: "thumbnails[]",
                                            thumbnails: ".uploaded",
                                            multiple: true,

                                        },
                                        (err, info) => {
                                            if (!err) {
                                                console.log("Upload Widget event - ", info);
                                            }
                                        });
                                }
                             

                                $('body').on('click', '.cloudinary-delete', function () {
                                    var spiltedLink = $(this).prev().attr('src').split('/');
                                    var imgId = spiltedLink[spiltedLink.length - 1].split('.')[0];
                                    $(`input[data-cloudinary-public-id="${imgId}"]`).remove();
                                });
                                document.getElementById("upload_widget").addEventListener("click", function () {
                                    showUploadWidget();
                                }, false);

                            </script>


                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                        }

                        <div class="border-primary">
                            @Html.ActionLink("Back to List", "Index")
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



