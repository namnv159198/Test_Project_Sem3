@using System.Collections.Specialized
@using Test_Project_IdentityMVC.Models
@using PagedList.Mvc
@model PagedList.IPagedList<Test_Project_IdentityMVC.Models.Product>

@{
    ViewBag.Title = "Index";
    var resCloud = "https://res.cloudinary.com/namnguyen159198/";
    Layout = "~/Views/Admin/Layout/_Layout.cshtml";
    var Iconsort = ViewBag.SortIcon;
    int countProduct = 0;
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<style>
    .padding {
        padding-top: 10px;
        padding-bottom: 20px;
    }
</style>
<div id="main-content" style="margin-top:-4px">
    <div class="container-fluid">
        <div class="block-header">
            <div class="row">
                <div class="col-lg-6 col-md-8 col-sm-12">
                    <h2><a href="javascript:void(0);" class="btn btn-xs btn-link btn-toggle-fullwidth"><i class="fa fa-arrow-left"></i></a> Product List</h2>
                    <ul class="breadcrumb">
                        <li class="breadcrumb-item"><a href="index-2.html"><i class="icon-home"></i></a></li>
                        <li class="breadcrumb-item">Product</li>
                        <li class="breadcrumb-item active">Product List</li>
                    </ul>
                </div>
            </div>
        </div>
        <p>
            @Html.ActionLink("Create New", "Create")
        </p>
        <div class="row padding">
            <div class="col-md-7">
                <form action="/Products/Index" method="get" name="search-form">
                    <div class="row">
                        <div class="col-md-3">
                            Search
                        </div>
                        <div class="col-md-9">
                            <div class="row">
                                <div class="col-md-6">
                                    <input type="text" name="keyword" value="" class="form-control" />
                                    <input type="hidden" name="start" value="" />
                                    <input type="hidden" name="end" value="" />
                                    <input type="hidden" name="sortOrder" value="" />
                                </div>

                            </div>


                        </div>
                    </div>
                    <div class="row padding">
                        <div class="col-md-3">
                            Filter by status
                        </div>
                        <div class="col-md-9">
                            @Html.DropDownList("status",
                                EnumHelper.GetSelectList(typeof(Product.EnumStatus)),
                                "Select Status",
                                new { @class = "form-control" })
                            <input type="submit" value="Search" class="btn btn-primary" style="margin-top: 20px" />
                        </div>
                    </div>

                </form>
            </div>
            <div class="col-md-5">
                <form action="/Products/Index" method="get">
                    Search by time <input type="text" name="daterange" value="" class="form-control" />
                </form>
            </div>

        </div>
        <div class="row clearfix">
            <div class="col-lg-12 col-md-12">
                <div class="card">
                    <div class="body project_report">
                        <div class="table-responsive">
                            <table class="table table-hover js-basic-example dataTable table-custom m-b-0">
                                <thead>
                                    <tr>
                                        <th>
                                            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm })
                                            <i class="@Iconsort" aria-hidden="true"></i>
                                        </th>
                                        <th>
                                            @Html.ActionLink("Price", "Index", new { sortOrder = ViewBag.PriceSortParm })
                                            <i class="@Iconsort" aria-hidden="true"></i>
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model[0].Thumbnails)
                                        </th>
                                        <th>
                                            @Html.ActionLink("Create At", "Index", new { sortOrder = ViewBag.DateSortParm })
                                            <i class="@Iconsort " aria-hidden="true"></i>
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model[0].Status)
                                        </th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Name)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Price)
                                            </td>
                                            <td>
                                                <img src="@item.GetDefaultThumbnails()" alt="Alternate" class="img-thumbnail" width="100" height="100" />

                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.CreatedAt)
                                            </td>
                                            <td>
                                                @if (item.Status.GetHashCode().Equals(0))
                                                {
                                                    <span class="border-success text-success border-success">
                                                        @item.Status
                                                    </span>
                                                }
                                                @if (item.Status.GetHashCode().Equals(1))
                                                {
                                                    <span class="border-success text-warning border-success">
                                                        @item.Status
                                                    </span>
                                                }
                                                @if (item.Status.GetHashCode().Equals(-1))
                                                {
                                                    <span class="border-success text-danger border-success">
                                                        @item.Status
                                                    </span>
                                                }



                                            </td>
                                            <td class="project-actions">

                                                <a href="@Url.Action("Details", "Products", new {id = item.Id})" class="btn btn-sm btn-outline-primary border-primary"><i class="icon-eye"></i></a>
                                                <a href="@Url.Action("Edit", "Products", new {id = item.Id})" class="btn btn-sm btn-outline-success border-success"><i class="icon-pencil"></i></a>
                                                <a href="@Url.Action("Delete", "Products", new {id = item.Id})" class="btn btn-sm btn-outline-danger js-sweetalert border-danger" title="Delete" data-type="confirm"><i class="icon-trash"></i></a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>

                            @Html.PagedListPager(Model, page => Url.Action("Index",
                                new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

                        </div>
                    </div>
                </div>
            </div>
        </div>
        
    </div>
</div>
@section scripts{
    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <script type="text/javascript">


        var start = moment().subtract(29, 'days');
        var end = moment();
        // Lấy đoạn link href
        var url_string = location.href;
        var url = new URL(url_string);
        // Cắt đoạn biến trong herf
        var initStart = url.searchParams.get("start");
        var initEnd = url.searchParams.get("end");
        var keyword = url.searchParams.get("keyword");
        var sortOrder = url.searchParams.get("sortOrder");
        // Nếu khác null và đúng định dạng datetime YYY-MM-DD
        if (initStart != null && moment(initStart, 'YYYY-MM-DD', true).isValid()) {
            // Gán biến cho start trong thẻ input
            start = initStart;
            $('input[name="start"]').val(start);
        }
        if (initEnd != null && moment(initEnd, 'YYYY-MM-DD', true).isValid()) {
            end = initEnd;
            $('input[name="end"]').val(end);
        }
        if (keyword != null) {
            $('input[name="keyword"]').val(keyword);
        }
        if (sortOrder != null) {
            $('input[name="sortOrder"]').val(keyword);
        }

        $('input[name="daterange"]').daterangepicker({
            startDate: start,
            endDate: end,
            locale: {
                format: 'YYYY-MM-DD'
            },
            ranges: {
                'Today': [moment(), moment()],
                'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                'This Month': [moment().startOf('month'), moment().endOf('month')],
                'Last Month': [
                    moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')
                ]
            }
        });

        $('input[name="daterange"]').on('apply.daterangepicker',
            function (ev, picker) {
                var startDate = picker.startDate.format('YYYY-MM-DD');
                var endDate = picker.endDate.format('YYYY-MM-DD');
                $('input[name="start"]').val(startDate);
                $('input[name="end"]').val(endDate);
                $('form[name="search-form"]').submit();
            });
        $('select[name="status"]').change(function () {
            $('form[name="search-form"]').submit();
        });
        $('.paginate-number').click(function () {
            $('input[name="page"]').val($(this).attr('title'));
            $('form[name="search-form"]').submit();
        });
    </script>


}
