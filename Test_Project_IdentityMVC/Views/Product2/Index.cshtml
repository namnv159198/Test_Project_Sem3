@using PagedList.Mvc
@model PagedList.IPagedList<Test_Project_IdentityMVC.Models.Product2>

@{
    ViewBag.Title = "Index";
    var Iconsort = ViewBag.SortIcon;
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "Product2", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm })
            <i class="@Iconsort "></i>
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].Content)
        </th>
        <th>
            @Html.ActionLink(" PRICE", "Index", new { sortOrder = ViewBag.PriceSortParm })
            <i class="@Iconsort "></i>

        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].Thumbnails)
        </th>
        <th>
            @Html.ActionLink("CREATE AT", "Index", new { sortOrder = ViewBag.DateSortParm })
            <i class="@Iconsort " aria-hidden="true"></i>

        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Thumbnails)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }
    <button type="button" id="upload_widget" class="btn bg-primary">Upload files</button>
</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

<script src="https://widget.cloudinary.com/v2.0/global/all.js" type="text/javascript"></script>

<script type="text/javascript">
                                function showUploadWidget() {
                                    cloudinary.openUploadWidget({
                                            cloudName: "namnguyen159198",
                                            uploadPreset: "ml_default",
                                            sources: [
                                                "local",
                                                "url",
                                                "camera",
                                                "image_search",
                                                "facebook",
                                                "dropbox",
                                                "instagram",
                                                "shutterstock"
                                            ],
                                            form: ".product-form",
                                            fieldName: "thumbnails[]",
                                            thumbnails: ".uploaded",
                                            multiple: true,

                                        },
                                        (err, info) => {
                                            if (!err) {
                                                console.log("Upload Widget event - ", info);
                                            }
                                        });
                                }
//                                $('body').on('click', '.cloudinary-delete', function () {
//                                        alert(2);
//                                });


                                document.getElementById("upload_widget").addEventListener("click", function () {
                                    showUploadWidget();
                                }, false);

</script>

